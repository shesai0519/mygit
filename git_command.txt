安装Git
git config --global user.name "your name" //设置git用户
git config --global user.email "email@example.com" //设置git邮箱

创建版本库
cd d\:mygit //打开版本库所在目录
git init git //初始化，会创建一个.git（版本库）文件夹

git add readme.txt //将文件添加到暂存区
git commit -m "wrote a readme file" //将文件提交到版本库

时光机穿梭
git status 查看git状态
git diff readme.txt //查看文件的不同

版本回退
git log //查看操作日志
git log --pretty=oneline //查看操作日志，且每条日志显示为一行

git reset --hard HEAD^ //回退到上一版本。在git中用HEAD表示当前版本，上一版本就是HEAD^，上上版本是HEAD^^，上100个版本为HEAD~100.

git reset --hard 0c120fe //回退到上版本ID为0c120fe的版本

git reflog //用来记录每一次命令

撤销修改
git checkout -- file //丢弃攻过去的修改
gitreset HEAD file //把暂存区的修改撤销掉

删除文件
git rm file //将文件从版本库中删除

远程仓库
ssh-keygen -t rsa -C "chenwf0519@163.com" //创建SSH Key github网站需要生成的公钥

添加远程库
git remote add origin https://github.com/shesai0519/mygit.git //添加远程库

git remote rm origin //git 远程的 orgin  删除掉

git push -u origin master /推送本地库至远程库

从远程库克隆
git clone https://github.com/shesai0519/myclone.git //克隆远程库至本地

创建与合并分支
git checkout -b dev //创建dev分支，并切换到dev分支

git branch dev //创建dev分支
git checkout dev //切换到dev分支

git branch //查看当前分支

git merge dev //合并dev分支到当前分支

git branch -d dev //删除dev分支

分支管理策略
git merge --no-ff -m "merge with no-ff" dev //合并dev分支，并禁用Fast forward模式

git log --graph --pretty=oneline --abbrev-commit //查看分支历史

Bug分支
git stash //隐藏当前工作分支

git stash list //查看隐藏分支列表

git stash apply //恢复隐藏的分支

git stash drop //删除stash

git stash pop //恢复隐藏分支并删除stash

git stash apply stash@{0} //有多个stash时，删除制定stash

Feature分支
git branch -D feature-vulcan //强行删除分支（分支没有合并前，会提示无法删除，可以使用此命令强行删除）

多人协作
git remote //查看远程库信息

git remote -v //查看远程库详细信息

git push origin master //推送本地分支上的所有本地提交到远程库

git push origin dev //推送dev分支上的所有本地提交到远程库

git checkout -b dev origin/dev //创建远程origin的dev分支到本地

git pull //从远处抓取最新的提交


test